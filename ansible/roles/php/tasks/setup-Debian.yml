---
- name: Update apt cache.
  apt: update_cache=yes cache_valid_time=86400

- name: Add Ondrej Sury's apt key (Debian).
  apt_key:
    url: https://packages.sury.org/php/apt.gpg
    state: present
  when: ansible_distribution == "Debian"

- name: Add Ondrej Sury's repo (Debian).
  apt_repository:
    repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
    state: present
  register: php_ondrej_debian_repo
  when: ansible_distribution == "Debian"

- name: Update apt caches after repo is added (Debian).
  apt: update_cache=true
  when:
    - php_ondrej_debian_repo.changed
    - ansible_distribution == "Debian"
  tags: ['skip_ansible_lint']

- name: Ensure PHP packages are installed.
  apt:
    name: "{{ php_packages + php_packages_extra }}"
    state: "{{ php_packages_state }}"
    install_recommends: "{{ php_install_recommends }}"
  register: php_package_install
  notify: restart webserver

- name: Delete APCu configuration file if this role will provide one.
  file:
    path: "{{ item }}/{{ php_apc_conf_filename }}"
    state: absent
  with_items: "{{ php_extension_conf_paths }}"
  when: php_enable_apc and php_package_install.changed
  notify: restart webserver

- name: Delete OpCache configuration file if this role will provide one.
  file:
    path: "{{ item }}/{{ php_opcache_conf_filename }}"
    state: absent
  with_items: "{{ php_extension_conf_paths }}"
  when: php_opcache_enable | bool and php_package_install.changed
  notify: restart webserver

- name: Set the correct opcache filename (Ubuntu/Debian).
  set_fact:
    php_opcache_conf_filename: "10-opcache.ini"

- name: Ensure dirmngr is installed (gnupg dependency).
  apt:
    name: dirmngr
    state: present

- name: Add repository for PHP versions (Ubuntu).
  apt_repository: repo='ppa:ondrej/php'
  when: ansible_distribution == "Ubuntu"

# Debian-specific tasks.
- name: Add dependencies for PHP versions (Debian).
  apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present
  when: ansible_distribution == "Debian"

- name: Purge PHP version packages (besides the currently chosen php_version).
  apt:
    name: "{{ php_versions_debian | reject('search', 'php' ~ config.php_version) | list }}"
    state: absent
    purge: true
    force: true
  register: php_version_purge

- name: Also purge php-common package if any versions were just purged.
  apt:
    name: php-common
    state: absent
    purge: true
    force: true
  when: php_version_purge.changed | bool
